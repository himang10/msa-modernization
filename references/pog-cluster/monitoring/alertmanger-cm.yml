apiVersion: v1
data:
  alertmanager.yml: |
    global:
      # ResolveTimeout is the time after which an alert is declared resolved
      # if it has not been updated.
      resolve_timeout: 5m

      # The smarthost and SMTP sender used for mail notifications.
      smtp_smarthost: 'smtp.sendgrid.net:587'
      smtp_from: 'alertmanager@zcp.com'
      smtp_auth_username: 'foo@bar.com'
      smtp_auth_password: 'barfoo'
      smtp_auth_secret: 'foobar'
      smtp_require_tls: true

      slack_api_url: 'https://global.slack_api_url'
      hipchat_auth_token: '1234556789'
      hipchat_api_url: 'https://hipchat.foobar.org/'

    # The directory from which notification templates are read.
    templates:
    - '/etc/templates/*.tmpl'

    # The root route on which each incoming alert enters.
    route:

      # The labels by which incoming alerts are grouped together. For example,
      # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
      # be batched into a single group.

      group_by: ['alertname', 'severity', 'receiver', 'priority', 'env', 'product']

      # When a new group of alerts is created by an incoming alert, wait at
      # least 'group_wait' to send the initial notification.
      # This way ensures that you get multiple alerts for the same group that start
      # firing shortly after another are batched together on the first
      # notification.

      group_wait: 30s

      # When the first notification was sent, wait 'group_interval' to send a batch
      # of new alerts that started firing for that group.

      group_interval: 5m

      # If an alert has successfully been sent, wait 'repeat_interval' to
      # resend them.

      repeat_interval: 60m

      # A default receiver

      # If an alert isn't caught by a route, send it to default.
      receiver: default

      # All the above attributes are inherited by all child routes and can
      # overwritten on each.

      # The child route trees.
      routes:
      - receiver: default
        continue: true
      - receiver: alert-aggregator
        continue: true

    receivers:
    - name: 'default'
      webhook_configs:
      - url: http://zcp-alertmanager-store-svc:5000/webhook
        send_resolved: true

    - name: 'alert-aggregator'
      webhook_configs:
      - url: https://api.cloudzcp.io/alert/webhook/alertmanager
        send_resolved: true
        http_config:
          basic_auth:
            username: alertmanager
            password_file: /etc/secrets/API_PASSWORD
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"config.yml":"global:\n  # ResolveTimeout is the time after which an alert is declared resolved\n  # if it has not been updated.\n  resolve_timeout: 5m\n\n  # The smarthost and SMTP sender used for mail notifications.\n  smtp_smarthost: 'smtp.sendgrid.net:587'\n  smtp_from: 'alertmanager@zcp.com'\n  smtp_auth_username: 'foo@bar.com'\n  smtp_auth_password: 'barfoo'\n  smtp_auth_secret: 'foobar'\n  smtp_require_tls: true\n\n  slack_api_url: 'https://global.slack_api_url'\n  hipchat_auth_token: '1234556789'\n  hipchat_api_url: 'https://hipchat.foobar.org/'\n\n# The directory from which notification templates are read.\ntemplates:\n- '/etc/alertmanager-templates/*.tmpl'\n\n# The root route on which each incoming alert enters.\nroute:\n\n  # The labels by which incoming alerts are grouped together. For example,\n  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would\n  # be batched into a single group.\n\n  group_by: ['alertname', 'severity', 'receiver', 'priority', 'env', 'product']\n\n  # When a new group of alerts is created by an incoming alert, wait at\n  # least 'group_wait' to send the initial notification.\n  # This way ensures that you get multiple alerts for the same group that start\n  # firing shortly after another are batched together on the first\n  # notification.\n\n  group_wait: 30s\n\n  # When the first notification was sent, wait 'group_interval' to send a batch\n  # of new alerts that started firing for that group.\n\n  group_interval: 5m\n\n  # If an alert has successfully been sent, wait 'repeat_interval' to\n  # resend them.\n\n  repeat_interval: 60m\n\n  # A default receiver\n\n  # If an alert isn't caught by a route, send it to default.\n  receiver: default\n\n  # All the above attributes are inherited by all child routes and can\n  # overwritten on each.\n\n  # The child route trees.\n  routes:\n  - receiver: default\n    continue: true\n  - receiver: alert-aggregator\n    continue: true\n\nreceivers:\n- name: 'default'\n  webhook_configs:\n  - url: http://zcp-alertmanager-store-svc:5000/webhook\n    send_resolved: true\n\n- name: 'alert-aggregator'\n  webhook_configs:\n  - url: https://api.cloudzcp.io/alert/webhook/alertmanager\n    send_resolved: true\n    http_config:\n      basic_auth:\n        username: alertmanager\n        password_file: /etc/alertmanager-secrets/API_PASSWORD\n"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"alertmanager","namespace":"zcp-system"}}
  creationTimestamp: 2019-10-11T06:14:21Z
  name: alertmanager
  namespace: zcp-system
  resourceVersion: "117108181"
  selfLink: /api/v1/namespaces/zcp-system/configmaps/alertmanager
  uid: 5da02445-ebee-11e9-ae1f-1e46d866e11d
