apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"name":"prometheus-deployment","namespace":"zcp-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"component":"prometheus"}},"template":{"metadata":{"labels":{"component":"prometheus"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"beta.kubernetes.io/arch","operator":"In","values":["amd64"]},{"key":"node-role.kubernetes.io/management","operator":"Exists"}]}]}}},"containers":[{"args":["--config.file=/etc/config/prometheus.yml","--storage.tsdb.path=/data","--storage.tsdb.retention.time=37d","--web.console.libraries=/etc/prometheus/console_libraries","--web.console.templates=/etc/prometheus/consoles","--web.enable-lifecycle","--web.enable-admin-api"],"image":"au.icr.io/cloudzcp/prometheus:v2.16.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/-/healthy","port":9090,"scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":30},"name":"prometheus","ports":[{"containerPort":9090,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/-/ready","port":9090,"scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":30},"resources":{"limits":{"cpu":"2000m","memory":"6Gi"},"requests":{"cpu":"2000m","memory":"4Gi"}},"securityContext":{"runAsUser":0},"volumeMounts":[{"mountPath":"/etc/config","name":"config-volume"},{"mountPath":"/data","name":"storage-volume"},{"mountPath":"/etc/prometheus-rules","name":"rules-volume"},{"mountPath":"/etc/prometheus-zdb-rules","name":"zdb-rules-volume"},{"mountPath":"/etc/prometheus-user-rules","name":"user-rules-volume"},{"mountPath":"/etc/etcd-secrets","name":"etcd-secrets-volume","readOnly":true}]}],"restartPolicy":"Always","serviceAccountName":"zcp-system-admin","tolerations":[{"effect":"NoSchedule","key":"management","operator":"Equal","value":"true"}],"volumes":[{"configMap":{"defaultMode":420,"name":"prometheus-config"},"name":"config-volume"},{"name":"storage-volume","persistentVolumeClaim":{"claimName":"prometheus-data"}},{"configMap":{"defaultMode":420,"name":"prometheus-rules"},"name":"rules-volume"},{"configMap":{"defaultMode":420,"name":"prometheus-zdb-rules"},"name":"zdb-rules-volume"},{"configMap":{"defaultMode":420,"name":"prometheus-user-rules"},"name":"user-rules-volume"},{"name":"etcd-secrets-volume","secret":{"secretName":"etcd-secrets"}}]}}}}
  creationTimestamp: 2020-03-20T05:26:17Z
  generation: 2
  labels:
    component: prometheus
  name: prometheus-deployment
  namespace: zcp-system
  resourceVersion: "117087055"
  selfLink: /apis/extensions/v1beta1/namespaces/zcp-system/deployments/prometheus-deployment
  uid: 824d219d-a61d-4e52-bbc1-a4a768d04819
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      component: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        component: prometheus
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
              - key: node-role.kubernetes.io/management
                operator: Exists
      containers:
      - args:
        - --config.file=/etc/config/prometheus.yml
        - --storage.tsdb.path=/data
        - --storage.tsdb.retention.time=37d
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        - --web.enable-admin-api
        image: au.icr.io/cloudzcp/prometheus:v2.16.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: prometheus
        ports:
        - containerPort: 9090
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        resources:
          limits:
            cpu: "2"
            memory: 6Gi
          requests:
            cpu: "2"
            memory: 4Gi
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /data
          name: storage-volume
        - mountPath: /etc/prometheus-rules
          name: rules-volume
        - mountPath: /etc/prometheus-zdb-rules
          name: zdb-rules-volume
        - mountPath: /etc/prometheus-user-rules
          name: user-rules-volume
        - mountPath: /etc/etcd-secrets
          name: etcd-secrets-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: zcp-system-admin
      serviceAccountName: zcp-system-admin
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: management
        operator: Equal
        value: "true"
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-config
        name: config-volume
      - name: storage-volume
        persistentVolumeClaim:
          claimName: prometheus-data
      - configMap:
          defaultMode: 420
          name: prometheus-rules
        name: rules-volume
      - configMap:
          defaultMode: 420
          name: prometheus-zdb-rules
        name: zdb-rules-volume
      - configMap:
          defaultMode: 420
          name: prometheus-user-rules
        name: user-rules-volume
      - name: etcd-secrets-volume
        secret:
          defaultMode: 420
          secretName: etcd-secrets
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2020-03-20T05:26:17Z
    lastUpdateTime: 2020-03-20T05:26:17Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
