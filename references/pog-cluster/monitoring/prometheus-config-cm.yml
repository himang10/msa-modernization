apiVersion: v1
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 15s
      evaluation_interval: 15s
      external_labels:
        env: 'CLOUDZCP-POG-DEV'

    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager-service:9093"

    rule_files:
    - /etc/prometheus-rules/*.rules
    - /etc/prometheus-zdb-rules/*.rules
    - /etc/prometheus-user-rules/*.rules

    scrape_configs:
    - job_name: 'kubernetes-apiservers'

      kubernetes_sd_configs:
      - role: endpoints

      scheme: https

      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

    - job_name: 'kubernetes-nodes-kubelet'
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: labelmap
        regex: __meta_kubernetes_node_label_node_role_kubernetes_io_(.+)
        replacement: dedicated
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    - job_name: 'kubernetes-nodes-exporter'
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: labelmap
        regex: __meta_kubernetes_node_label_node_role_kubernetes_io_(.+)
        replacement: dedicated
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __address__
        replacement: ${1}:9100

    - job_name: 'kubernetes-nodes-cadvisor'
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: labelmap
        regex: __meta_kubernetes_node_label_node_role_kubernetes_io_(.+)
        replacement: dedicated
      - target_label: __metrics_path__
        replacement: /metrics/cadvisor
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    - job_name: 'kubernetes-monitoring-endpoints'

      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: [zcp-system]

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_namespace]
        action: keep
        regex: zcp-system
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
      metric_relabel_configs:
      - action: labelmap
        regex: label_node_role_kubernetes_io_(.+)
        replacement: dedicated

    - job_name: 'kubernetes-service-endpoints'

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_namespace]
        action: drop
        regex: zcp-system
      - source_labels: [__meta_kubernetes_namespace]
        action: drop
        regex: kube-system
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: service

    - job_name: 'kubernetes-pods'

      kubernetes_sd_configs:
      - role: pod

      relabel_configs:
      # Example relabel to scrape only pods that have
      # "example.io/should_be_scraped = true" annotation.
      #  - source_labels: [__meta_kubernetes_pod_annotation_example_io_should_be_scraped]
      #    action: keep
      #    regex: true
      #
      # Example relabel to customize metric path based on pod
      # "example.io/metric_path = <metric path>" annotation.
      #  - source_labels: [__meta_kubernetes_pod_annotation_example_io_metric_path]
      #    action: replace
      #    target_label: __metrics_path__
      #    regex: (.+)
      #
      # Example relabel to scrape only single, desired port for the pod
      # based on pod "example.io/scrape_port = <port>" annotation.
      # Note that __address__ is modified here, so if pod containers' ports
      # are declared, they all will be ignored.
      #  - source_labels: [__address__, __meta_kubernetes_pod_annotation_example_io_scrape_port]
      #    action: replace
      #    regex: ([^:]+)(?::\d+)?;(\d+)
      #    replacement: $1:$2
      #    target_label: __address__
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_namespace]
        action: drop
        regex: zcp-system
      - source_labels: [__meta_kubernetes_namespace]
        action: drop
        regex: kube-system
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
        separator: ;
        regex: (https?)
        target_label: __scheme__
        replacement: $1
        action: replace
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        separator: ;
        regex: (.+)
        target_label: __metrics_path__
        replacement: $1
        action: replace
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        separator: ;
        regex: ([^:]+)(?::\d+)?;(\d+)
        target_label: __address__
        replacement: $1:$2
        action: replace
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

    - job_name: 'kube-dns'

      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: [kube-system]

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_namespace]
        action: keep
        regex: kube-system
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: 53
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        action: drop
        regex: 10053
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

    - job_name: 'kubernetes-ingress'

      metrics_path: /probe
      params:
        module: [http_2xx]

      kubernetes_sd_configs:
      - role: ingress

      relabel_configs:
      - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_probe]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_namespace]
        action: drop
        regex: zcp-system
      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
        regex: (.+);(.+);(.+)
        replacement: ${1}://${2}${3}
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox:9115
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_ingress_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_ingress_path]
        target_label: pod
      - source_labels: [__meta_kubernetes_ingress_name]
        target_label: kubernetes_name

    - job_name: 'monitoring-zcp-system'
      metrics_path: /probe
      params:
        module: [http_2xx]
      static_configs:
      - targets:
        - http://grafana-service:3000/api/health
        - http://prometheus-service:9090/-/healthy
        - http://alertmanager-service:9093/-/healthy
        labels:
          namespace: 'zcp-system'

      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox:9115


    - job_name: 'etcd'
      static_configs:
      - targets:
        - "172.20.0.1:2041"
      tls_config:
        ca_file: /etc/etcd-secrets/etcd-ca
        cert_file: /etc/etcd-secrets/etcd-cert
        key_file: /etc/etcd-secrets/etcd-key
        insecure_skip_verify: true
      scheme: https
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"prometheus.yml":"global:\n  scrape_interval: 15s\n  scrape_timeout: 15s\n  evaluation_interval: 15s\n  external_labels:\n    env: 'CLOUDZCP-POG-DEV'\n\nalerting:\n  alertmanagers:\n  - scheme: http\n    static_configs:\n    - targets:\n      - \"alertmanager-service:9093\"\n\nrule_files:\n- /etc/prometheus-rules/*.rules\n- /etc/prometheus-zdb-rules/*.rules\n- /etc/prometheus-user-rules/*.rules\n\nscrape_configs:\n- job_name: 'kubernetes-apiservers'\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  scheme: https\n\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\n- job_name: 'kubernetes-nodes-kubelet'\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_node_role_kubernetes_io_(.+)\n    replacement: dedicated\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n- job_name: 'kubernetes-nodes-exporter'\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_node_role_kubernetes_io_(.+)\n    replacement: dedicated\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __address__\n    replacement: ${1}:9100\n\n- job_name: 'kubernetes-nodes-cadvisor'\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_node_role_kubernetes_io_(.+)\n    replacement: dedicated\n  - target_label: __metrics_path__\n    replacement: /metrics/cadvisor\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n- job_name: 'kubernetes-monitoring-endpoints'\n\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names: [zcp-system]\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_namespace]\n    action: keep\n    regex: zcp-system\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n    action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n  metric_relabel_configs:\n  - action: labelmap\n    regex: label_node_role_kubernetes_io_(.+)\n    replacement: dedicated\n\n- job_name: 'kubernetes-service-endpoints'\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_namespace]\n    action: drop\n    regex: zcp-system\n  - source_labels: [__meta_kubernetes_namespace]\n    action: drop\n    regex: kube-system\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n    action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: service\n\n- job_name: 'kubernetes-pods'\n\n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  # Example relabel to scrape only pods that have\n  # \"example.io/should_be_scraped = true\" annotation.\n  #  - source_labels: [__meta_kubernetes_pod_annotation_example_io_should_be_scraped]\n  #    action: keep\n  #    regex: true\n  #\n  # Example relabel to customize metric path based on pod\n  # \"example.io/metric_path = \u003cmetric path\u003e\" annotation.\n  #  - source_labels: [__meta_kubernetes_pod_annotation_example_io_metric_path]\n  #    action: replace\n  #    target_label: __metrics_path__\n  #    regex: (.+)\n  #\n  # Example relabel to scrape only single, desired port for the pod\n  # based on pod \"example.io/scrape_port = \u003cport\u003e\" annotation.\n  # Note that __address__ is modified here, so if pod containers' ports\n  # are declared, they all will be ignored.\n  #  - source_labels: [__address__, __meta_kubernetes_pod_annotation_example_io_scrape_port]\n  #    action: replace\n  #    regex: ([^:]+)(?::\\d+)?;(\\d+)\n  #    replacement: $1:$2\n  #    target_label: __address__\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_namespace]\n    action: drop\n    regex: zcp-system\n  - source_labels: [__meta_kubernetes_namespace]\n    action: drop\n    regex: kube-system\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n    separator: ;\n    regex: (https?)\n    target_label: __scheme__\n    replacement: $1\n    action: replace\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n    separator: ;\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: $1\n    action: replace\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n    separator: ;\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    target_label: __address__\n    replacement: $1:$2\n    action: replace\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: kubernetes_pod_name\n\n- job_name: 'kube-dns'\n\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names: [kube-system]\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_namespace]\n    action: keep\n    regex: kube-system\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__meta_kubernetes_pod_container_port_number]\n    action: drop\n    regex: 53\n  - source_labels: [__meta_kubernetes_pod_container_port_number]\n    action: drop\n    regex: 10053\n  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n    action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n    action: replace\n    target_label: kubernetes_name\n\n- job_name: 'kubernetes-ingress'\n\n  metrics_path: /probe\n  params:\n    module: [http_2xx]\n\n  kubernetes_sd_configs:\n  - role: ingress\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_probe]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_namespace]\n    action: drop\n    regex: zcp-system\n  - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]\n    regex: (.+);(.+);(.+)\n    replacement: ${1}://${2}${3}\n    target_label: __param_target\n  - target_label: __address__\n    replacement: blackbox:9115\n  - source_labels: [__param_target]\n    target_label: instance\n  - action: labelmap\n    regex: __meta_kubernetes_ingress_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_ingress_path]\n    target_label: pod\n  - source_labels: [__meta_kubernetes_ingress_name]\n    target_label: kubernetes_name\n\n- job_name: 'monitoring-zcp-system'\n  metrics_path: /probe\n  params:\n    module: [http_2xx]\n  static_configs:\n  - targets:\n    - http://grafana-service:3000/api/health\n    - http://prometheus-service:9090/-/healthy\n    - http://alertmanager-service:9093/-/healthy\n    labels:\n      namespace: 'zcp-system'\n\n  relabel_configs:\n  - source_labels: [__address__]\n    target_label: __param_target\n  - source_labels: [__param_target]\n    target_label: instance\n  - target_label: __address__\n    replacement: blackbox:9115\n\n\n- job_name: 'etcd'\n  static_configs:\n  - targets:\n    - \"172.20.0.1:2041\"\n  tls_config:\n    ca_file: /etc/config/etcd-ca\n    cert_file: /etc/config/etcd-cert\n    key_file: /etc/config/etcd-key\n    insecure_skip_verify: true\n  scheme: https\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{},"name":"prometheus-config","namespace":"zcp-system"}}
  creationTimestamp: 2019-02-26T06:04:14Z
  name: prometheus-config
  namespace: zcp-system
  resourceVersion: "117083616"
  selfLink: /api/v1/namespaces/zcp-system/configmaps/prometheus-config
  uid: 57b74560-398c-11e9-814c-ca0890826a6e
